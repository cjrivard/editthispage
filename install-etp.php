<?php
/**
 * EditThisPage Installation Script
 * Modern PHP-compatible version with warning fixes
 * 
 * This installation script has been updated to work with modern PHP environments
 * by addressing various warnings and errors that occurred in older versions.
 */

// Initialize variables to prevent "undefined variable" warnings
$no_script_output = false;
$admin_mode = false;
$installation_complete = false;
$error_messages = [];

// Check for admin mode - Fix for "Undefined array key 'argv'" warning
// Use $_GET['admin'] instead of $_SERVER["argv"][0] for web server context
if (isset($_GET['admin'])) {
    $admin_mode = true;
}

// Check installation state - Fix for "Undefined array key 'etp_state'" warning
// Add isset() check before accessing $_COOKIE['etp_state']
$installation_state = '';
if (isset($_COOKIE['etp_state'])) {
    $installation_state = $_COOKIE['etp_state'];
}

/**
 * Get lock file contents with proper error handling
 * Fix for "Undefined array key 1" warning in getLockFile
 */
function getLockFile($lockFilePath) {
    $lockData = [];
    
    if (!file_exists($lockFilePath)) {
        return $lockData;
    }
    
    $lines = file($lockFilePath, FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
    
    if ($lines === false) {
        return $lockData;
    }
    
    foreach ($lines as $line) {
        $line = trim($line);
        
        // Fix: Check if line contains '=' before attempting to explode
        // This prevents "Undefined array key 1" warning
        if (strpos($line, '=') !== false) {
            $parts = explode('=', $line, 2);
            if (count($parts) >= 2) {
                $lockData[trim($parts[0])] = trim($parts[1]);
            }
        }
    }
    
    return $lockData;
}

/**
 * Save installation state
 */
function saveInstallationState($state) {
    // Set cookie with proper expiration time
    setcookie('etp_state', $state, time() + 3600, '/');
}

/**
 * Create configuration file
 */
function createConfigFile($settings) {
    $configPath = dirname(__FILE__) . '/config.php';
    
    $configContent = "<?php\n";
    $configContent .= "// EditThisPage Configuration\n";
    $configContent .= "// Generated by install-etp.php\n\n";
    
    foreach ($settings as $key => $value) {
        $configContent .= "\$config['" . addslashes($key) . "'] = '" . addslashes($value) . "';\n";
    }
    
    $configContent .= "\n?>";
    
    return file_put_contents($configPath, $configContent);
}

/**
 * Check system requirements
 */
function checkSystemRequirements() {
    $requirements = [];
    
    // Check PHP version
    $requirements['php_version'] = [
        'name' => 'PHP Version',
        'required' => '7.4.0',
        'current' => PHP_VERSION,
        'status' => version_compare(PHP_VERSION, '7.4.0', '>=')
    ];
    
    // Check file permissions
    $requirements['write_permissions'] = [
        'name' => 'Write Permissions',
        'required' => 'Writable directory',
        'current' => is_writable(dirname(__FILE__)) ? 'Writable' : 'Not writable',
        'status' => is_writable(dirname(__FILE__))
    ];
    
    return $requirements;
}

// Main installation logic
if (isset($_SERVER['REQUEST_METHOD']) && $_SERVER['REQUEST_METHOD'] === 'POST' && isset($_POST['install'])) {
    $settings = [
        'site_name' => $_POST['site_name'] ?? 'EditThisPage',
        'admin_email' => $_POST['admin_email'] ?? '',
        'data_directory' => $_POST['data_directory'] ?? 'data',
        'installation_date' => date('Y-m-d H:i:s')
    ];
    
    // Validate required fields
    if (empty($settings['admin_email'])) {
        $error_messages[] = 'Admin email is required';
    }
    
    if (empty($error_messages)) {
        // Create configuration
        if (createConfigFile($settings)) {
            // Create data directory if it doesn't exist
            $dataDir = dirname(__FILE__) . '/' . $settings['data_directory'];
            if (!is_dir($dataDir)) {
                mkdir($dataDir, 0755, true);
            }
            
            saveInstallationState('completed');
            $installation_complete = true;
        } else {
            $error_messages[] = 'Failed to create configuration file';
        }
    }
}

// Get lock file data (if exists)
$lockFilePath = dirname(__FILE__) . '/install.lock';
$lockData = getLockFile($lockFilePath);

// Check if already installed
$already_installed = isset($lockData['installed']) && $lockData['installed'] === 'true';

// Check system requirements
$requirements = checkSystemRequirements();
$all_requirements_met = true;
foreach ($requirements as $req) {
    if (!$req['status']) {
        $all_requirements_met = false;
        break;
    }
}

// Set content type and start output
if (!$no_script_output && php_sapi_name() !== 'cli') {
    header('Content-Type: text/html; charset=UTF-8');
}
?>
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>EditThisPage Installation</title>
    <style>
        body { 
            font-family: Arial, sans-serif; 
            max-width: 800px; 
            margin: 50px auto; 
            padding: 20px;
            background-color: #f5f5f5;
        }
        .container { 
            background: white; 
            padding: 30px; 
            border-radius: 8px; 
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        h1 { color: #333; border-bottom: 2px solid #007cba; padding-bottom: 10px; }
        .error { color: #d63384; background: #f8d7da; padding: 10px; border-radius: 4px; margin: 10px 0; }
        .success { color: #0f5132; background: #d1e7dd; padding: 10px; border-radius: 4px; margin: 10px 0; }
        .warning { color: #664d03; background: #fff3cd; padding: 10px; border-radius: 4px; margin: 10px 0; }
        .form-group { margin: 15px 0; }
        label { display: block; margin-bottom: 5px; font-weight: bold; }
        input[type="text"], input[type="email"] { 
            width: 100%; 
            padding: 8px; 
            border: 1px solid #ddd; 
            border-radius: 4px; 
            box-sizing: border-box;
        }
        button { 
            background: #007cba; 
            color: white; 
            padding: 10px 20px; 
            border: none; 
            border-radius: 4px; 
            cursor: pointer; 
            font-size: 16px;
        }
        button:hover { background: #005a87; }
        button:disabled { background: #ccc; cursor: not-allowed; }
        .requirements { margin: 20px 0; }
        .req-item { 
            display: flex; 
            justify-content: space-between; 
            padding: 8px; 
            border-bottom: 1px solid #eee; 
        }
        .req-pass { color: #0f5132; }
        .req-fail { color: #d63384; }
    </style>
</head>
<body>
    <div class="container">
        <h1>EditThisPage Installation</h1>
        
        <?php if ($already_installed): ?>
            <div class="warning">
                <strong>Already Installed</strong><br>
                EditThisPage appears to already be installed. If you need to reinstall, 
                please remove the install.lock file first.
            </div>
        <?php elseif ($installation_complete): ?>
            <div class="success">
                <strong>Installation Complete!</strong><br>
                EditThisPage has been successfully installed. You can now start using your wiki.
                <br><br>
                For security reasons, you should delete this installation file.
            </div>
        <?php else: ?>
            
            <h2>System Requirements</h2>
            <div class="requirements">
                <?php foreach ($requirements as $req): ?>
                    <div class="req-item">
                        <span><?php echo htmlspecialchars($req['name']); ?>:</span>
                        <span class="<?php echo $req['status'] ? 'req-pass' : 'req-fail'; ?>">
                            <?php echo htmlspecialchars($req['current']); ?>
                            <?php echo $req['status'] ? '✓' : '✗'; ?>
                        </span>
                    </div>
                <?php endforeach; ?>
            </div>
            
            <?php if (!$all_requirements_met): ?>
                <div class="error">
                    <strong>Requirements Not Met</strong><br>
                    Please resolve the system requirements above before proceeding with installation.
                </div>
            <?php else: ?>
                
                <?php if (!empty($error_messages)): ?>
                    <div class="error">
                        <strong>Installation Errors:</strong>
                        <ul>
                            <?php foreach ($error_messages as $error): ?>
                                <li><?php echo htmlspecialchars($error); ?></li>
                            <?php endforeach; ?>
                        </ul>
                    </div>
                <?php endif; ?>
                
                <h2>Configuration</h2>
                <form method="post" action="">
                    <div class="form-group">
                        <label for="site_name">Site Name:</label>
                        <input type="text" id="site_name" name="site_name" 
                               value="<?php echo htmlspecialchars($_POST['site_name'] ?? 'EditThisPage'); ?>" 
                               required>
                    </div>
                    
                    <div class="form-group">
                        <label for="admin_email">Administrator Email:</label>
                        <input type="email" id="admin_email" name="admin_email" 
                               value="<?php echo htmlspecialchars($_POST['admin_email'] ?? ''); ?>" 
                               required>
                    </div>
                    
                    <div class="form-group">
                        <label for="data_directory">Data Directory:</label>
                        <input type="text" id="data_directory" name="data_directory" 
                               value="<?php echo htmlspecialchars($_POST['data_directory'] ?? 'data'); ?>" 
                               required>
                    </div>
                    
                    <button type="submit" name="install" value="1">Install EditThisPage</button>
                </form>
                
            <?php endif; ?>
        <?php endif; ?>
        
        <?php if ($admin_mode): ?>
            <div class="warning">
                <strong>Admin Mode</strong><br>
                Running in administrator mode.
            </div>
        <?php endif; ?>
    </div>
</body>
</html>